volumes:
  classic-models-data:
  customer-service-data:

networks:
  source-network:
    driver: bridge

services:
  classic-models-db:
    container_name: classic-models-db
    image: mysql:lts
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    init: true
    environment:
      MYSQL_DATABASE: ${CLASSIC_MODELS_DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${CLASSIC_MODELS_DB_ROOT_PASSWORD}
      MYSQL_USER: ${CLASSIC_MODELS_DB_USER}
      MYSQL_PASSWORD: ${CLASSIC_MODELS_DB_PASSWORD}
    ports:
      - ${CLASSIC_MODELS_DB_PORT}:3306
    volumes:
      - classic-models-data:/var/lib/mysql
      - ./classic-models/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - source-network
  customer-service-db:
    container_name: customer-service-db
    image: postgres:16.4-alpine3.20
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    init: true
    environment:
      POSTGRES_DATABASE: ${CUSTOMER_SERVICE_DB_DATABASE}
      POSTGRES_USER: ${CUSTOMER_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${CUSTOMER_SERVICE_DB_PASSWORD}
    ports:
      - ${CUSTOMER_SERVICE_DB_PORT}:5432
    volumes:
      - customer-service-data:/var/lib/postgres/data
      - ./customer-service/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - source-network
